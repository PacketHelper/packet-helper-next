name: CI
on: [push]

jobs:
  verify-django:
    name: Pytest (backend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python dependencies (pip)
        run: |
          pip install -r requirements-dev.txt
      - name: Install Wireshark & tshark  (apt)
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get -y install wireshark
          sudo apt-get install -y --allow-change-held-packages --force-yes tshark
      - name: Run django test
        run: |
          make test
  verify-js:
    name: JS code verification (frontend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo npm install -g prettier
      - name: Verify code (js w/prettier)
        run: |
          prettier --check src/
  verify-python:
    name: Python code verification (backend)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install black isort
      - name: Verify code (python w/black)
        run: |
          black --check -t py38 ph/ tests/
      - name: Verify imports (w/isort)
        run: |
          isort --check ph/ tests/ --profile black
  release:
    name: Prepare release
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [verify-django, verify-js, verify-python]
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: npm install --save-dev semantic-release
      - name: Release new version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
  push_to_registry:
    name: Push Docker image to HerokuApp (as production env)
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [verify-django, verify-js, verify-python, release]
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://packethelper.com
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "GIT_VERSION_TAG=`git describe --tags --abbrev=0`" >> $GITHUB_ENV
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:push web -a packet-helper --arg PH_VER="${GIT_VERSION_TAG}:${SHORT_SHA}"
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a packet-helper
  push_to_registry_pr:
    name: Push Docker image to HerokuApp (as development env)
    if: ${{ github.ref != 'refs/heads/main' }}
    needs: [verify-django, verify-js, verify-python]
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://packet-helper-pr.herokuapp.com/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Add SHORT_SHA env property with commit short sha
        run: |
          echo "GIT_VERSION_TAG=`git describe --tags --abbrev=0`" >> $GITHUB_ENV
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:push web -a packet-helper-pr --arg PH_VER="${GIT_VERSION_TAG}:${SHORT_SHA}"
      - name: Release
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a packet-helper-pr
  check_pr_staus:
    name: Check status of env (as development env)
    if: ${{ github.ref != 'refs/heads/main' }}
    needs: [ push_to_registry_pr ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Verify /api/info
        run: |
          pip install requests pydantic
          export GIT_VERSION_TAG=`git describe --tags --abbrev=0`
          export SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`
          python check_deployment.py https://packet-helper-pr.herokuapp.com $GIT_VERSION_TAG $SHORT_SHA
